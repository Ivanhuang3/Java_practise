package ivan666;

public class ivan11 {

	public static void main(String[] args) {
		// 1. 宣告並初始化陣列
		int[] a;
		a = new int[3];
		// 2. 印出陣列長度
		System.out.println(a.length);
		// 3. 迴圈印出陣列每個元素
		for (int i=0; i<a.length; i++) {
			System.out.println(a[i]);
		}
		// 4. 印分隔線
		System.out.println("---");
		// 5. 修改陣列元素
		a[1] = 123;
		a[0] = 12;
		// 6. 再次迴圈印出陣列每個元素
		for (int i=0; i<a.length; i++) {
			System.out.println(a[i]);
		}
		// 7. 印分隔線
		System.out.println("---");
		// 8. 用增強型 for 迴圈印陣列元素
		for(int v : a) {
			System.out.println(v);
		}
		System.out.println("---");
		// 10. 印陣列物件
		System.out.println(a);
		// 11. 印分隔線
		System.out.println("---");
		// 12. 宣告並印出整數變數
		int b = 3;
		System.out.println(b);
//這段程式像是在展示陣列的基本操作，具體來說：
//
//建立一個長度為 3 的整數陣列，初始值都是 0。
//印出陣列的長度（3）。
//印出初始的陣列內容（0, 0, 0）。
//修改陣列的某些值（a[0] = 12, a[1] = 123）。
//再次印出修改後的陣列內容（12, 123, 0），
//用兩種方式（普通 for 迴圈和 for-each 迴圈）。
//試著直接印陣列物件（結果是記憶體位址）。
//最後印一個普通整數變數 b 的值（3）。
//用 "---" 作為分隔線，讓輸出更清楚。	
//
//
//for (int i = 0; i < a.length; i++) {
//	    System.out.println(a[i]);
//	}
//	for (初始化; 條件; 更新) // 要執行的程式碼
//初始化的部分：int i = 0
//這在做什麼：
//宣告一個整數變數 i，並設它的初始值為 0。
//i 是迴圈的索引變數，用來追蹤我們目前在陣列的哪個位置。
//因為 Java 陣列的索引從 0 開始（第一個元素是 a[0]），
//所以 i 從 0 開始很合理。
//為什麼用 int i：
//i 是整數型別（int），因為陣列的索引必須是整數。
//每次迴圈開始時，i 會被初始化為 0，確保我們從陣列的第一個元素開始。
//
//條件的部分：i < a.length
//這在做什麼：
//這是迴圈的繼續條件，決定迴圈要不要繼續跑。
//a.length 是陣列 a 的長度。在你的程式中，
//a 是一個長度為 3 的陣列（new int[3]），所以 a.length 是 3。
//i < a.length 意思是：只要 i 小於 3
//（也就是 i 是 0, 1, 2），迴圈就繼續跑。
//當 i 變成 3 時，i < a.length 變成 false，迴圈就停止。
//為什麼用 < a.length：
//陣列的合法索引是 0 到 a.length - 1（這裡是 0, 1, 2）。
//如果用 i <= a.length，會試圖存取 a[3]，這
//會導致 ArrayIndexOutOfBoundsException（陣列索引越界）。
//用 < a.length 確保我們只存取合法的索引。
//
//更新的部分：i++
//這在做什麼：
//每次迴圈結束後，i 的值會加 1（i++ 是 i = i + 1 的簡寫）。
//這讓 i 從 0 遞增到 1，再到 2，逐一走訪陣列的每個索引。
//為什麼要更新：
//如果 i 不加 1，迴圈會永遠卡在 i = 0，無限印出 a[0]。
//i++ 確保我們每次迴圈都移到下一個元素。
//
//迴圈內的程式碼：System.out.println(a[i]);
//這在做什麼：
//a[i] 是陣列 a 在索引 i 的元素。
//System.out.println 會把 a[i] 的值印到螢幕上，
//並在印完後換行（println 會自動加 \n）。
//例如：
//當 i = 0，印出 a[0] 的值。
//當 i = 1，印出 a[1] 的值。
//當 i = 2，印出 a[2] 的值。
//為什麼用 a[i]：
//i 是當前的索引，a[i] 取出陣列在該索引的值。
//這讓我們能動態存取陣列的不同元素。
//
//假設這段程式碼是在你的 ivan11 程式中的
//第一個 for 迴圈（陣列 a 剛初始化為 {0, 0, 0}）。讓我們一步步看它怎麼跑：
//
//第一次迴圈：
//初始化：i = 0
//檢查條件：0 < a.length（0 < 3），條件成立，進入迴圈。
//執行：System.out.println(a[0]); → 印出 a[0] 的值（0）。
//更新：i++ → i 變成 1。
//第二次迴圈：
//檢查條件：1 < a.length（1 < 3），條件成立，進入迴圈。
//執行：System.out.println(a[1]); → 印出 a[1] 的值（0）。
//更新：i++ → i 變成 2。
//第三次迴圈：
//檢查條件：2 < a.length（2 < 3），條件成立，進入迴圈。
//執行：System.out.println(a[2]); → 印出 a[2] 的值（0）。
//更新：i++ → i 變成 3。
//迴圈結束：
//檢查條件：3 < a.length（3 < 3），條件不成立，迴圈停止。

		}
	}


